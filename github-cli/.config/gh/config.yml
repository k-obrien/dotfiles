# The current version of the config schema
version: 1
# What protocol to use when performing git operations. Supported values: ssh, https
git_protocol: https
# What editor gh should run when creating issues, pull requests, etc. If blank, will refer to environment.
editor:
# When to interactively prompt. This is a global config that cannot be overridden by hostname. Supported values: enabled, disabled
prompt: enabled
# A pager program to send command output to, e.g. "less". If blank, will refer to environment. Set the value to "cat" to disable the pager.
pager:
# Aliases allow you to create nicknames for gh commands
# Add aliases to complex commands by placing the command in a text file (e.g. command.txt) without the `gh` prefix and run the following command:
# cat command.txt | gh alias set <alias name> -
aliases:
    raise-pr: pr create --draft --title "$1" --template "$2" --reviewer "$3"
    my-prs: search prs --author=@me --state=open --json title,url --jq '.[] | "\u001b[97m\(.title)\u001b[0m\n\u001b[34m\(.url)\u001b[0m\n"'
    reviewed-prs:  '!gh review-prs "repo:$1 is:pr is:open draft:false -author:@me reviewed-by:@me"'
    unreviewed-prs: '!gh review-prs "repo:$1 is:pr is:open draft:false -author:@me -reviewed-by:@me"'
    review-prs: |
        api graphql
            -F search_query="$1"
            -f query='
                query($search_query: String!) {
                    search(
                        query: $search_query
                        first: 10
                        type: ISSUE
                    ) {
                        nodes {
                            ... on PullRequest {
                                statusCheckRollup {
                                    state
                                }
                                createdAt
                                latestReviews(first: 10) {
                                    nodes {
                                        state
                                        viewerDidAuthor
                                    }
                                    totalCount
                                }
                                title
                                url
                            }
                        }
                    }
                }
            '
            --jq '
                .data.search.nodes | 
                sort_by(.createdAt, .latestReviews.totalCount, .statusCheckRollup.state) | 
                map(select(.latestReviews.nodes | any(.viewerDidAuthor == true and .state == "APPROVED") | not)) | .[] | 
                "\(if .statusCheckRollup.state == "SUCCESS" then "ðŸŸ¢" else "ðŸ”´" end) \u001b[97m[\u001b[32m\(.latestReviews.totalCount)\u001b[97m] \(.title)\u001b[0m\n\u001b[34m\(.url)\u001b[0m\n"
            '
# The path to a unix socket through which send HTTP connections. If blank, HTTP traffic will be handled by net/http.DefaultTransport.
http_unix_socket:
# What web browser gh should use when opening URLs. If blank, will refer to environment.
browser:
